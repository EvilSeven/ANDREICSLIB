version: 1.0.{build}
branches:
  only:
  - NUGET
shallow_clone: true
assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: '{version}'
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}'
environment:
  SandCastleZipFile: C:\projects\andrei\SHFBInstaller.zip
  SandCastleUri: https://github.com/EWSoftware/SHFB/releases/download/v2015.10.10.0/SHFBInstaller_v2015.10.10.0.zip
  SandCastleBase: C:\projects\andrei\
  SHFBROOT: C:\Program Files (x86)\EWSoftware\Sandcastle Help File Builder\
  SHFBTESTINSTALL: C:\Program Files (x86)\EWSoftware\Sandcastle Help File Builder\SandcastleHelpFileBuilder.targets
  SHFBInstall: C:\projects\andrei\InstallResources\SandcastleHelpFileBuilder.msi
  ProjectBase: C:\projects\andreicslib
  SHFBTest: C:\projects\andreicslib\Help\index.html
cache:
- C:\projects\andrei\SHFBInstaller.zip
- C:\Program Files (x86)\EWSoftware
nuget:
  account_feed: true
  project_feed: true
before_build:
- ps: >-
    echo "nuget restore"
    nuget restore
build:
  project: ANDREICSLIB.csproj
  publish_nuget: true
  publish_nuget_symbols: true
  include_nuget_references: true
  parallel: true
  verbosity: minimal
after_build:
- ps: 
after_test:
- ps: echo "branch = "\n echo $
# download zip file for SHFB
- ps: if ((Test-Path(\"$env:SandCastleZipFile\")) -eq 0 -and (%APPVEYOR_REPO_BRANCH% -eq "DOCUMENTATION"){echo \"Start-FileDownload\"\necho \"$env:SandCastleUri\"\necho \"$env:SandCastleZipFile\"\nmkdir \"$env:SandCastleBase\"\nInvoke-WebRequest \"$env:SandCastleUri\" -OutFile \"$env:SandCastleZipFile\"}
#unzip zip file for SHFB
- ps: if (%APPVEYOR_REPO_BRANCH% -eq "DOCUMENTATION"){echo \"7z\"\n cd \"$env:SandCastleBase\"\n 7z x \"$env:SandCastleZipFile\" -y}
#install SHFB
- ps: if ((Test-Path(\"$env:SHFBTESTINSTALL\")) -eq 0 -and (%APPVEYOR_REPO_BRANCH% -eq "DOCUMENTATION")){echo \"msiexec\"\nmsiexec /i \"$env:SHFBInstall\" /quiet /qn /norestart /log \"C:\\projects\\andrei\\install.log\"\nStart-Sleep -s 10}
#wait until SHFB install is complete, and run documentation
- ps: if (%APPVEYOR_REPO_BRANCH% -eq "DOCUMENTATION"){ while ((Test-Path(\"$env:SHFBTESTINSTALL\")) -eq 0){\necho \"Sleeping\"\nStart-Sleep -s 10\n}echo \"SHFB run\"\n cd \"$env:ProjectBase\"\necho \"dir\"\n dir\n msbuild proj.shfbproj /logger:\"C:\\Program Files\\AppVeyor\\BuildAgent\\Appveyor.MSBuildLogger.dll\" }
#SHFB fail
- ps: if ((Test-Path(\"$env:SHFBTEST\")) -eq 0 -and (%APPVEYOR_REPO_BRANCH% -eq "DOCUMENTATION")\n{\necho \"SHFB Fail\"\ncd \"C:\\projects\\andreicslib\\help\"\necho \"dir\"\ndir\nthrow \"SHFB Fail\"\n}
#pack SHFB
- ps: if (%APPVEYOR_REPO_BRANCH% -eq "DOCUMENTATION"){echo \"pack\"\n 7z a documentation.zip \"C:\\projects\\andreicslib\\help\\*\""}
artifacts:
- path: '**ANDREICSLIB**\*.nupkg'
- path: '**documentation.zip'

deploy:
- provider: NuGet
  api_key:
    secure: nBk9yEkwOweQxGzUzFoXsL1f48WYY2s9h+JHx3MMU9qecKoDEkI6BylMKWXkohcK
  skip_symbols: false
  artifact: '**ANDREICSLIB**\*.nupkg'

- provider: GitHub
  auth_token:
    secure: iMD2xJGiQSxN9K6L5kArtXJCkexP8VZoUoLJFMyzrl1rGH2DAxJ9FJoeehcv1Ml0
  artifact: '**documentation.zip'
  draft: false
  prerelease: false
  on:
    branch: DOCUMENTATION  